name: Backend - Build and deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: Environment
        required: true
        type: choice
        options:
          - "dev"
          - "prod"

  pull_request:
    types: [synchronize, closed, opened]
    branches:
      - dev
      - main

jobs:
  resolve-env:
    runs-on: ubuntu-latest
    steps:
      - name: resolve environment
        run: |
          branch_ref=${{ github.base_ref }}

          if [[ "$branch_ref" == "main" ]] || ${{ contains(github.event.inputs.environment, 'prod') }}; then
            echo "env_name=prod" >> $GITHUB_ENV

          else
            echo "env_name=dev" >> $GITHUB_ENV
          fi
    outputs:
      env_name: "${{ env.env_name }}"

  build:
    name: Build and deploy backend
    runs-on: ubuntu-latest
    needs: [resolve-env]
    environment: ${{ needs.resolve-env.outputs.env_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup node 18
        uses: actions/setup-node@v2
        with:
          always-auth: true
          node-version: "18"
          registry-url: "https://npm.pkg.github.com"

      - name: Install dependencies
        run: yarn --frozen-lockfile
        env:
          NODE_AUTH_TOKEN: ${{ secrets.ACCESS_TOKEN }}

      - name: Build backend
        id: build
        run: |
          ARTIFACT_NAME=backend-$(date +%s)
          echo "ARTIFACT_NAME=$ARTIFACT_NAME" >> $GITHUB_OUTPUT

          yarn build
          cp pm2.config.js package.json yarn.lock appspec.yml after-install.sh .npmrc dist/

      - name: Create a release
        if: github.event.pull_request.merged && (contains(github.base_ref, 'main'))
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Push to s3 bucket
        if: github.event.pull_request.merged || github.event_name == 'workflow_dispatch'
        run: |
          cd ${{ github.workspace }}/dist
          aws deploy push \
          --application-name backend \
          --description "This is a revision for the backend-${{ github.sha }}" \
          --s3-location s3://$ARTIFACT_BUCKET_NAME/${{ steps.build.outputs.ARTIFACT_NAME }}.zip
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          ARTIFACT_BUCKET_NAME: ${{ vars.ARTIFACT_BUCKET }}

      - name: Create deployment
        if: github.event.pull_request.merged || github.event_name == 'workflow_dispatch'
        run: |
          aws deploy create-deployment \
            --application-name backend \
            --deployment-group-name ${{ needs.resolve-env.outputs.env_name }} \
            --file-exists-behavior OVERWRITE \
            --s3-location bucket=$ARTIFACT_BUCKET_NAME,key=${{ steps.build.outputs.ARTIFACT_NAME }}.zip,bundleType=zip
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          ARTIFACT_BUCKET_NAME: ${{ vars.ARTIFACT_BUCKET }}
